{"ast":null,"code":"var _jsxFileName = \"D:\\\\PW2 Oscar\\\\PIA\\\\PIA\\\\front\\\\src\\\\posts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Posts({\n  onPostClick\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [currentUser, setCurrentUser] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    const userFromLocalStorage = localStorage.getItem('sesion');\n    const nombreUsuario = userFromLocalStorage ? JSON.parse(userFromLocalStorage) : null;\n    if (nombreUsuario) {\n      setCurrentUser(nombreUsuario);\n    }\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/publicaciones\");\n        setPosts(response.data);\n      } catch (error) {\n        console.error(\"Error al obtener las publicaciones:\", error);\n      }\n    };\n    const fetchCategories = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/categorias\");\n        setCategories(response.data);\n      } catch (error) {\n        console.error(\"Error al obtener las categorías:\", error);\n      }\n    };\n    fetchPosts();\n    fetchCategories();\n  }, []);\n  const handleDeletePost = async postId => {\n    try {\n      // Realiza la solicitud DELETE al servidor para eliminar la publicación\n      await axios.delete(`http://localhost:3001/borrar-publicacion/${postId}`);\n      // Actualiza la lista de publicaciones después de eliminar la publicación\n      setPosts(posts.filter(post => post.post_id !== postId));\n    } catch (error) {\n      console.error(\"Error al eliminar la publicación:\", error);\n    }\n  };\n  const handleCategoryChange = e => {\n    const selectedCategoryName = e.target.value;\n    setSelectedCategory(selectedCategoryName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid  imgFondo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      style: {\n        backgroundColor: 'red'\n      },\n      children: window.location.pathname !== \"/perfil\" &&\n      /*#__PURE__*/\n      // Selector de categorías\n      _jsxDEV(\"select\", {\n        onChange: handleCategoryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: null,\n          children: \"Todas las categor\\xEDas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.categoria_nombre,\n          children: category.categoria_nombre\n        }, category.categoria_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), posts.map(post => {\n      // Verificar si estamos en la página de Perfil y el nombre de usuario de la publicación coincide con el usuario actual\n      if (window.location.pathname === \"/perfil\" && post.nombre_usuario === currentUser.usuario || !selectedCategory || post.nombre_categoria === selectedCategory) {\n        // Si estamos en la página de Perfil y el post no pertenece al usuario actual, no lo mostramos\n        if (window.location.pathname === \"/perfil\" && post.nombre_usuario !== currentUser.usuario) {\n          return null;\n        }\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-5\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row fondoDetrasCard\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-3 p-2 \",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card\",\n                  onClick: () => onPostClick(post),\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-body\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: post.post_titulo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: post.post_descripcion\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-center\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: `/img/${post.post_foto}`,\n                        alt: \"Imagen del Post\"\n                        //style={{ width: '400vh', height: '200vh' }} // Establece el tamaño de la imagen\n                        ,\n                        style: {\n                          width: '100%',\n                          height: '200px',\n                          objectFit: 'cover'\n                        },\n                        className: \"card-img-top img-fluid\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Categor\\xEDa: \", post.nombre_categoria]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Publicado por: \", post.nombre_usuario]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 53\n                    }, this), \" \", window.location.pathname === \"/perfil\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleDeletePost(post.post_id),\n                      className: \"btn btn-danger mt-4\",\n                      children: \"Borrar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 49\n                  }, this)]\n                }, post.post_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)\n        }, void 0, false);\n      }\n      return null;\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"5R5OXLp02a2ijnkntEfrlF4szaY=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","onPostClick","_s","posts","setPosts","currentUser","setCurrentUser","selectedCategory","setSelectedCategory","categories","setCategories","userFromLocalStorage","localStorage","getItem","nombreUsuario","JSON","parse","fetchPosts","response","get","data","error","console","fetchCategories","handleDeletePost","postId","delete","filter","post","post_id","handleCategoryChange","e","selectedCategoryName","target","value","className","children","style","backgroundColor","window","location","pathname","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","category","categoria_nombre","categoria_id","nombre_usuario","usuario","nombre_categoria","onClick","post_titulo","post_descripcion","src","post_foto","alt","width","height","objectFit","_c","$RefreshReg$"],"sources":["D:/PW2 Oscar/PIA/PIA/front/src/posts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Posts({ onPostClick }) { \r\n    const [posts, setPosts] = useState([]);\r\n    const [currentUser, setCurrentUser] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState(null);\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const userFromLocalStorage = localStorage.getItem('sesion');\r\n        const nombreUsuario = userFromLocalStorage ? JSON.parse(userFromLocalStorage) : null;\r\n        if (nombreUsuario) {\r\n            setCurrentUser(nombreUsuario);\r\n        }\r\n\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const response = await axios.get(\"http://localhost:3001/publicaciones\");\r\n                setPosts(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error al obtener las publicaciones:\", error);\r\n            }\r\n        };\r\n\r\n        const fetchCategories = async () => {\r\n            try {\r\n                const response = await axios.get(\"http://localhost:3001/categorias\");\r\n                setCategories(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error al obtener las categorías:\", error);\r\n            }\r\n        };\r\n\r\n        fetchPosts();\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    const handleDeletePost = async (postId) => {\r\n        try {\r\n            // Realiza la solicitud DELETE al servidor para eliminar la publicación\r\n            await axios.delete(`http://localhost:3001/borrar-publicacion/${postId}`);\r\n            // Actualiza la lista de publicaciones después de eliminar la publicación\r\n            setPosts(posts.filter(post => post.post_id !== postId));\r\n        } catch (error) {\r\n            console.error(\"Error al eliminar la publicación:\", error);\r\n        }\r\n    };\r\n\r\n    const handleCategoryChange = (e) => {\r\n        const selectedCategoryName = e.target.value;\r\n        setSelectedCategory(selectedCategoryName);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid  imgFondo\">\r\n\r\n        <div className=\"\"style={{backgroundColor:'red'}}>\r\n            {window.location.pathname !== \"/perfil\" && (\r\n                // Selector de categorías\r\n\r\n                <select onChange={handleCategoryChange}>\r\n                    <option value={null}>Todas las categorías</option>\r\n                    {categories.map(category => (\r\n                        <option key={category.categoria_id} value={category.categoria_nombre}>{category.categoria_nombre}</option>\r\n                    ))}\r\n                </select>\r\n                \r\n            )}\r\n         </div>\r\n            {posts.map(post => {\r\n                // Verificar si estamos en la página de Perfil y el nombre de usuario de la publicación coincide con el usuario actual\r\n                if ((window.location.pathname === \"/perfil\" && post.nombre_usuario === currentUser.usuario) ||\r\n                    (!selectedCategory || post.nombre_categoria === selectedCategory)) {\r\n                    // Si estamos en la página de Perfil y el post no pertenece al usuario actual, no lo mostramos\r\n                    if (window.location.pathname === \"/perfil\" && post.nombre_usuario !== currentUser.usuario) {\r\n                        return null;\r\n                    }\r\n\r\n                    return (\r\n                        <>\r\n                            <div className=\"px-5\">\r\n                                <div className=\"row fondoDetrasCard\">\r\n                                    <div className=\"col-3 p-2 \">\r\n                                            <div className=\"card\" key={post.post_id} onClick={() => onPostClick(post)}> {/* Agrega el manejador de clic en la publicación */}\r\n                                                {/* Detalles del Post */}\r\n                                                <div className=\"card-body\">\r\n                                                    <h2>{post.post_titulo}</h2>\r\n                                                    <p>{post.post_descripcion}</p>\r\n                                                    <div className=\"text-center\">\r\n                                                    <img\r\n                                                        src={`/img/${post.post_foto}`}\r\n                                                        alt=\"Imagen del Post\"\r\n                                                        //style={{ width: '400vh', height: '200vh' }} // Establece el tamaño de la imagen\r\n                                                        style={{width: '100%', height:'200px',objectFit: 'cover'}}\r\n                                                        className=\"card-img-top img-fluid\"\r\n                                                    /> \r\n                                                    </div>\r\n\r\n                                                    <p>Categoría: {post.nombre_categoria}</p>\r\n                                                    <p>Publicado por: {post.nombre_usuario}</p> {/* Aquí se muestra el nombre del usuario que hizo la publicación */}\r\n                                                    {window.location.pathname === \"/perfil\" && (\r\n                                                        <button onClick={() => handleDeletePost(post.post_id)} className=\"btn btn-danger mt-4\">Borrar</button>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    );\r\n                }\r\n                return null; \r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}